(function() {var implementors = {};
implementors["bud"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"bud/struct.Args.html\" title=\"struct bud::Args\">Args</a>","synthetic":true,"types":["bud::Args"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"bud/struct.BudValidator.html\" title=\"struct bud::BudValidator\">BudValidator</a>","synthetic":true,"types":["bud::BudValidator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"bud/enum.SourceId.html\" title=\"enum bud::SourceId\">SourceId</a>","synthetic":true,"types":["bud::SourceId"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"bud/struct.SourceCache.html\" title=\"struct bud::SourceCache\">SourceCache</a>","synthetic":true,"types":["bud::SourceCache"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"bud/struct.BudPrompt.html\" title=\"struct bud::BudPrompt\">BudPrompt</a>","synthetic":true,"types":["bud::BudPrompt"]}];
implementors["budlang"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.ExpressionTree.html\" title=\"struct budlang::ast::ExpressionTree\">ExpressionTree</a>","synthetic":true,"types":["budlang::ast::ExpressionTree"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.NodeId.html\" title=\"struct budlang::ast::NodeId\">NodeId</a>","synthetic":true,"types":["budlang::ast::NodeId"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.If.html\" title=\"struct budlang::ast::If\">If</a>","synthetic":true,"types":["budlang::ast::If"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.Block.html\" title=\"struct budlang::ast::Block\">Block</a>","synthetic":true,"types":["budlang::ast::Block"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.BinOp.html\" title=\"struct budlang::ast::BinOp\">BinOp</a>","synthetic":true,"types":["budlang::ast::BinOp"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ast/enum.BinOpKind.html\" title=\"enum budlang::ast::BinOpKind\">BinOpKind</a>","synthetic":true,"types":["budlang::ast::BinOpKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.Call.html\" title=\"struct budlang::ast::Call\">Call</a>","synthetic":true,"types":["budlang::ast::Call"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.Assign.html\" title=\"struct budlang::ast::Assign\">Assign</a>","synthetic":true,"types":["budlang::ast::Assign"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.Map.html\" title=\"struct budlang::ast::Map\">Map</a>","synthetic":true,"types":["budlang::ast::Map"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.Mapping.html\" title=\"struct budlang::ast::Mapping\">Mapping</a>","synthetic":true,"types":["budlang::ast::Mapping"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.List.html\" title=\"struct budlang::ast::List\">List</a>","synthetic":true,"types":["budlang::ast::List"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"budlang/ast/struct.SyntaxTreeBuilder.html\" title=\"struct budlang::ast::SyntaxTreeBuilder\">SyntaxTreeBuilder</a>","synthetic":true,"types":["budlang::ast::SyntaxTreeBuilder"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"budlang/ast/struct.CodeUnit.html\" title=\"struct budlang::ast::CodeUnit\">CodeUnit</a>","synthetic":true,"types":["budlang::ast::CodeUnit"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"budlang/ast/enum.Declaration.html\" title=\"enum budlang::ast::Declaration\">Declaration</a>","synthetic":true,"types":["budlang::ast::Declaration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ast/struct.Function.html\" title=\"struct budlang::ast::Function\">Function</a>","synthetic":true,"types":["budlang::ast::Function"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ast/enum.CompilationError.html\" title=\"enum budlang::ast::CompilationError\">CompilationError</a>","synthetic":true,"types":["budlang::ast::CompilationError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ir/struct.Label.html\" title=\"struct budlang::ir::Label\">Label</a>","synthetic":true,"types":["budlang::ir::Label"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ir/struct.Variable.html\" title=\"struct budlang::ir::Variable\">Variable</a>","synthetic":true,"types":["budlang::ir::Variable"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ir/enum.DagNode.html\" title=\"enum budlang::ir::DagNode\">DagNode</a>","synthetic":true,"types":["budlang::ir::DagNode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ir/enum.Instruction.html\" title=\"enum budlang::ir::Instruction\">Instruction</a>","synthetic":true,"types":["budlang::ir::Instruction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ir/enum.Literal.html\" title=\"enum budlang::ir::Literal\">Literal</a>","synthetic":true,"types":["budlang::ir::Literal"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ir/struct.Mapping.html\" title=\"struct budlang::ir::Mapping\">Mapping</a>","synthetic":true,"types":["budlang::ir::Mapping"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ir/enum.ValueSource.html\" title=\"enum budlang::ir::ValueSource\">ValueSource</a>","synthetic":true,"types":["budlang::ir::ValueSource"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ir/enum.LiteralOrSource.html\" title=\"enum budlang::ir::LiteralOrSource\">LiteralOrSource</a>","synthetic":true,"types":["budlang::ir::LiteralOrSource"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ir/enum.Destination.html\" title=\"enum budlang::ir::Destination\">Destination</a>","synthetic":true,"types":["budlang::ir::Destination"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ir/enum.CompareAction.html\" title=\"enum budlang::ir::CompareAction\">CompareAction</a>","synthetic":true,"types":["budlang::ir::CompareAction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ir/struct.CodeBlockBuilder.html\" title=\"struct budlang::ir::CodeBlockBuilder\">CodeBlockBuilder</a>","synthetic":true,"types":["budlang::ir::CodeBlockBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ir/struct.CodeBlock.html\" title=\"struct budlang::ir::CodeBlock\">CodeBlock</a>","synthetic":true,"types":["budlang::ir::CodeBlock"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ir/enum.ScopeSymbolKind.html\" title=\"enum budlang::ir::ScopeSymbolKind\">ScopeSymbolKind</a>","synthetic":true,"types":["budlang::ir::ScopeSymbolKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/ir/enum.ScopeSymbol.html\" title=\"enum budlang::ir::ScopeSymbol\">ScopeSymbol</a>","synthetic":true,"types":["budlang::ir::ScopeSymbol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ir/struct.Function.html\" title=\"struct budlang::ir::Function\">Function</a>","synthetic":true,"types":["budlang::ir::Function"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/ir/struct.UnlinkedCodeUnit.html\" title=\"struct budlang::ir::UnlinkedCodeUnit\">UnlinkedCodeUnit</a>","synthetic":true,"types":["budlang::ir::UnlinkedCodeUnit"]},{"text":"impl&lt;Key, Value, HashBuilder&gt; Freeze for <a class=\"struct\" href=\"budlang/map/struct.BudMap.html\" title=\"struct budlang::map::BudMap\">BudMap</a>&lt;Key, Value, HashBuilder&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;HashBuilder: Freeze,&nbsp;</span>","synthetic":true,"types":["budlang::map::BudMap"]},{"text":"impl&lt;'a, Key, Value, HashBuilder&gt; Freeze for <a class=\"enum\" href=\"budlang/map/enum.Entry.html\" title=\"enum budlang::map::Entry\">Entry</a>&lt;'a, Key, Value, HashBuilder&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Key: Freeze,&nbsp;</span>","synthetic":true,"types":["budlang::map::Entry"]},{"text":"impl&lt;'a, Key, Value, HashBuilder&gt; Freeze for <a class=\"struct\" href=\"budlang/map/struct.OccupiedEntry.html\" title=\"struct budlang::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, Key, Value, HashBuilder&gt;","synthetic":true,"types":["budlang::map::OccupiedEntry"]},{"text":"impl&lt;'a, Key, Value, HashBuilder&gt; Freeze for <a class=\"struct\" href=\"budlang/map/struct.VacantEntry.html\" title=\"struct budlang::map::VacantEntry\">VacantEntry</a>&lt;'a, Key, Value, HashBuilder&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Key: Freeze,&nbsp;</span>","synthetic":true,"types":["budlang::map::VacantEntry"]},{"text":"impl&lt;'a, Key, Value&gt; Freeze for <a class=\"struct\" href=\"budlang/map/struct.Iter.html\" title=\"struct budlang::map::Iter\">Iter</a>&lt;'a, Key, Value&gt;","synthetic":true,"types":["budlang::map::Iter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/parser/struct.Token.html\" title=\"struct budlang::parser::Token\">Token</a>","synthetic":true,"types":["budlang::parser::Token"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/parser/enum.ParseError.html\" title=\"enum budlang::parser::ParseError\">ParseError</a>","synthetic":true,"types":["budlang::parser::ParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/symbol/struct.Symbol.html\" title=\"struct budlang::symbol::Symbol\">Symbol</a>","synthetic":true,"types":["budlang::symbol::Symbol"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/vm/struct.Dynamic.html\" title=\"struct budlang::vm::Dynamic\">Dynamic</a>","synthetic":true,"types":["budlang::vm::dynamic::Dynamic"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"budlang/vm/struct.List.html\" title=\"struct budlang::vm::List\">List</a>","synthetic":true,"types":["budlang::vm::list::List"]},{"text":"impl&lt;State&nbsp;=&nbsp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.64.0/std/collections/hash/map/struct.RandomState.html\" title=\"struct std::collections::hash::map::RandomState\">RandomState</a>&gt; !Freeze for <a class=\"struct\" href=\"budlang/vm/struct.HashMap.html\" title=\"struct budlang::vm::HashMap\">HashMap</a>&lt;State&gt;","synthetic":true,"types":["budlang::vm::map::HashMap"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"budlang/vm/struct.StringLiteralDisplay.html\" title=\"struct budlang::vm::StringLiteralDisplay\">StringLiteralDisplay</a>&lt;'a&gt;","synthetic":true,"types":["budlang::vm::string::StringLiteralDisplay"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.Instruction.html\" title=\"enum budlang::vm::Instruction\">Instruction</a>","synthetic":true,"types":["budlang::vm::Instruction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.Intrinsic.html\" title=\"enum budlang::vm::Intrinsic\">Intrinsic</a>","synthetic":true,"types":["budlang::vm::Intrinsic"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.CompareAction.html\" title=\"enum budlang::vm::CompareAction\">CompareAction</a>","synthetic":true,"types":["budlang::vm::CompareAction"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.Destination.html\" title=\"enum budlang::vm::Destination\">Destination</a>","synthetic":true,"types":["budlang::vm::Destination"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.ValueSource.html\" title=\"enum budlang::vm::ValueSource\">ValueSource</a>","synthetic":true,"types":["budlang::vm::ValueSource"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.ValueOrSource.html\" title=\"enum budlang::vm::ValueOrSource\">ValueOrSource</a>","synthetic":true,"types":["budlang::vm::ValueOrSource"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.Comparison.html\" title=\"enum budlang::vm::Comparison\">Comparison</a>","synthetic":true,"types":["budlang::vm::Comparison"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/vm/struct.Function.html\" title=\"struct budlang::vm::Function\">Function</a>","synthetic":true,"types":["budlang::vm::Function"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.Value.html\" title=\"enum budlang::vm::Value\">Value</a>","synthetic":true,"types":["budlang::vm::Value"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.ValueKind.html\" title=\"enum budlang::vm::ValueKind\">ValueKind</a>","synthetic":true,"types":["budlang::vm::ValueKind"]},{"text":"impl&lt;Env&gt; Freeze for <a class=\"struct\" href=\"budlang/vm/struct.Bud.html\" title=\"struct budlang::vm::Bud\">Bud</a>&lt;Env&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Env: Freeze,&nbsp;</span>","synthetic":true,"types":["budlang::vm::Bud"]},{"text":"impl&lt;'a, Env, ReturnType&gt; Freeze for <a class=\"struct\" href=\"budlang/vm/struct.Fault.html\" title=\"struct budlang::vm::Fault\">Fault</a>&lt;'a, Env, ReturnType&gt;","synthetic":true,"types":["budlang::vm::Fault"]},{"text":"impl&lt;'a, Env, ReturnType&gt; Freeze for <a class=\"enum\" href=\"budlang/vm/enum.FaultOrPause.html\" title=\"enum budlang::vm::FaultOrPause\">FaultOrPause</a>&lt;'a, Env, ReturnType&gt;","synthetic":true,"types":["budlang::vm::FaultOrPause"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.FaultKind.html\" title=\"enum budlang::vm::FaultKind\">FaultKind</a>","synthetic":true,"types":["budlang::vm::FaultKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/vm/struct.FaultStackFrame.html\" title=\"struct budlang::vm::FaultStackFrame\">FaultStackFrame</a>","synthetic":true,"types":["budlang::vm::FaultStackFrame"]},{"text":"impl&lt;'a, Env, ReturnType&gt; Freeze for <a class=\"struct\" href=\"budlang/vm/struct.PausedExecution.html\" title=\"struct budlang::vm::PausedExecution\">PausedExecution</a>&lt;'a, Env, ReturnType&gt;","synthetic":true,"types":["budlang::vm::PausedExecution"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/vm/struct.Budgeted.html\" title=\"struct budlang::vm::Budgeted\">Budgeted</a>","synthetic":true,"types":["budlang::vm::Budgeted"]},{"text":"impl Freeze for <a class=\"enum\" href=\"budlang/vm/enum.ExecutionBehavior.html\" title=\"enum budlang::vm::ExecutionBehavior\">ExecutionBehavior</a>","synthetic":true,"types":["budlang::vm::ExecutionBehavior"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/vm/struct.CodeBlock.html\" title=\"struct budlang::vm::CodeBlock\">CodeBlock</a>","synthetic":true,"types":["budlang::vm::CodeBlock"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"budlang/vm/struct.CodeBlockDisplay.html\" title=\"struct budlang::vm::CodeBlockDisplay\">CodeBlockDisplay</a>&lt;'a&gt;","synthetic":true,"types":["budlang::vm::CodeBlockDisplay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/vm/struct.Stack.html\" title=\"struct budlang::vm::Stack\">Stack</a>","synthetic":true,"types":["budlang::vm::Stack"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"budlang/vm/struct.PoppedValues.html\" title=\"struct budlang::vm::PoppedValues\">PoppedValues</a>&lt;'a&gt;","synthetic":true,"types":["budlang::vm::PoppedValues"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budlang/vm/struct.DynamicFault.html\" title=\"struct budlang::vm::DynamicFault\">DynamicFault</a>","synthetic":true,"types":["budlang::vm::DynamicFault"]},{"text":"impl&lt;'a, Env, ReturnType&gt; Freeze for <a class=\"enum\" href=\"budlang/enum.Error.html\" title=\"enum budlang::Error\">Error</a>&lt;'a, Env, ReturnType&gt;","synthetic":true,"types":["budlang::Error"]}];
implementors["xtask"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"xtask/enum.Config.html\" title=\"enum xtask::Config\">Config</a>","synthetic":true,"types":["xtask::Config"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()