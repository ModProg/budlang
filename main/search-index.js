var searchIndex = JSON.parse('{\
"bud":{"doc":"","t":[12,3,3,3,13,13,7,7,7,7,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,12,12],"n":["0","Args","BudPrompt","BudValidator","CommandLine","Counter","DEFAULT_MULTILINE_INDICATOR","DEFAULT_PROMPT_INDICATOR","DEFAULT_VI_INSERT_PROMPT_INDICATOR","DEFAULT_VI_NORMAL_PROMPT_INDICATOR","File","SourceCache","SourceId","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","command","command_for_update","default","display","entries","eq","eval","fetch","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","hash","into","into","into","into","into","main","partial_cmp","print_error","print_value","register","render_prompt_history_search_indicator","render_prompt_indicator","render_prompt_left","render_prompt_multiline_indicator","render_prompt_right","source_file","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrap_or_print_error","unwrap_or_print_error_and_exit","update_from_arg_matches","update_from_arg_matches_mut","validate","0","0"],"q":["bud","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bud::SourceId",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[3,0,0,0,2,2,0,0,0,0,2,0,0,13,13,27,13,2,5,3,27,13,2,5,3,2,3,2,3,2,13,13,5,5,5,2,13,5,13,2,27,13,2,5,3,13,13,13,2,27,13,2,5,3,0,2,0,0,5,3,3,3,3,3,13,2,3,27,13,2,5,3,27,13,2,5,3,27,13,2,5,3,0,0,13,13,27,29,30],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],[[2,2],4],[[],1],[[],1],[[],5],[[5,2],[[8,[[7,[6]]]]]],0,[[2,2],9],0,[[5,2],[[12,[10,[7,[11]]]]]],[[13,14],15],[[2,14],15],[[]],[[]],[[]],[[]],[[]],[16,[[12,[13,17]]]],[16,[[12,[13,17]]]],[[],[[8,[18]]]],[2],[[]],[[]],[[]],[[]],[[]],[[],19],[[2,2],[[8,[4]]]],[[2,5,[21,[20]]],19],[[9,20]],[[5,2,22]],[[3,23],[[24,[22]]]],[[3,25],[[24,[22]]]],[3,[[24,[22]]]],[3,[[24,[22]]]],[3,[[24,[22]]]],0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,[[13,16],[[12,[17]]]],[[13,16],[[12,[17]]]],[[27,22],28],0,0],"p":[[3,"Command"],[4,"SourceId"],[3,"BudPrompt"],[4,"Ordering"],[3,"SourceCache"],[8,"Display"],[3,"Box"],[4,"Option"],[15,"bool"],[3,"Source"],[8,"Debug"],[4,"Result"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[6,"Result"],[4,"Value"],[4,"Error"],[15,"str"],[3,"PromptHistorySearch"],[4,"Cow"],[4,"PromptEditMode"],[3,"TypeId"],[3,"BudValidator"],[4,"ValidationResult"],[13,"Counter"],[13,"File"]]},\
"budlang":{"doc":"A safe, fast, lightweight embeddable scripting language â€¦","t":[3,3,13,8,4,4,16,16,13,13,13,16,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,12,12,12,13,3,3,4,13,13,13,3,3,3,3,13,4,3,4,13,3,13,3,13,3,13,3,13,13,13,3,4,3,3,13,13,3,3,13,13,13,3,13,13,13,13,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Bud","BudEnvironment","Compilation","Environment","Error","Intrinsic","List","Map","NewList","NewMap","Parse","String","Vm","ast","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default_for","define_function","define_persistent_variable","deref","deref","deref_mut","deref_mut","empty","eq","eq","eq","evaluate","expect_no_pause","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","into","into","into","into","intrinsic","location","map_each_symbol","new","new","parser","provide","resolve_function_vtable_index","run_source","step","step","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vm","with_function","with_native_function","0","0","0","Add","Assign","BinOp","BinOpKind","BitwiseAnd","BitwiseOr","BitwiseXor","Block","Break","Call","CodeUnit","Compare","CompilationError","Continue","Declaration","Divide","ExpressionTree","For","Function","Function","If","InvalidScope","List","LogicalAnd","LogicalOr","LogicalXor","Loop","LoopParameters","Map","Mapping","Module","Multiply","NodeId","Not","ShiftLeft","ShiftRight","Sub","SyntaxTreeBuilder","UndefinedFunction","UndefinedIdentifier","Until","While","assign_node","binop_node","body","boolean","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_node","build","call","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare_node","compile","continue_node","default","default","eq","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_tree","generate_code","global","identifier","if_node","integer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","key","list_node","loop_node","map_node","mappings","name","name","name","name","new","new","new","new","not_node","on","parameters","provide","real","recurse","return_node","statements","string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","values","with","with_else","0","0","0","0","0","0","0","ascending","inclusive","initial_value","step","stop_value","var_name","Add","Ampersand","Assign","BracketType","Caret","Close","Colon","Comma","Comment","Comparison","Curly","Divide","EndOfLine","ExpectedEndOfLine","Hash","Identifier","Integer","Lexer","MissingEnd","Multiply","Not","Numeric","Open","Paren","ParseError","Period","Pipe","Real","ShiftLeft","ShiftRight","Square","String","String","Sub","Tilde","Token","TokenKind","Unexpected","UnexpectedEof","Unknown","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into_iter","kind","location","new","next","parse","provide","range","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","0","0","error_location","found","kind","offset","open_offset","0","0","0","0","0","0","0","0","0"],"q":["budlang","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","budlang::Error","","","budlang::astbudlang::ast::BinOpKind","budlang::ast::CompilationError","","budlang::ast::Declaration","","budlang::ast::LoopParameters","","","","","","","","budlang::parser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","budlang::parser::ParseError","","","","","","","","","budlang::parser::TokenKind","","","","","","","",""],"d":["A Bud virtual machine instance.","A wrapper for a <code>Environment</code> that implements â€¦","An error occurred while compiling <code>CodeUnit</code>.","Customizes the behavior of a virtual machine instance.","All errors that can be encountered executing Bud code.","A runtime intrinsic function.","The list (array) type for this environment.","The map type for this environment.","Creates a new List with the given arguments.","Creates a new Map with the given arguments.","An error occurred while parsing the source code.","The string type for this environment.","A fault occurred while running the virtual machine.","The abstract syntax tree Bud uses.","","","","","","","","","","","","","Returns a new instance with the provided environment.","","","","","","","Returns a default instance of Bud with no custom â€¦","","","","Evaluates <code>source</code> interactively and returns the provided â€¦","Asserts that this error does not contain a paused â€¦","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the source range for this error, if available.","","Returns a new instance with the provided virtual machine.","Returns a new instance wrapping <code>env</code>.","The interface for parsing Bud code.","","","Compiles <code>source</code> and executes it in this context. Any â€¦","Called once before each instruction is executed.","","","","","","","","","","","","","","","","","","","Registers a function with the provided name and returns â€¦","Registers a function with the provided name and returns â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,0,0,68,68,2,2,1,68,1,0,3,1,9,2,3,1,9,2,1,2,1,2,3,3,3,3,9,3,9,3,1,9,2,3,1,1,1,9,2,2,3,1,1,1,1,1,1,1,9,2,2,3,1,9,2,9,1,3,3,9,0,1,3,3,68,9,1,2,1,2,3,1,9,2,3,1,9,2,3,1,9,2,0,3,3,69,70,71,36,0,0,0,36,36,36,0,0,0,0,36,0,0,0,36,0,54,0,55,0,19,0,36,36,36,0,0,0,0,55,36,0,0,36,36,36,0,19,19,54,54,34,34,53,34,39,35,48,49,50,36,51,40,52,41,42,43,53,54,37,44,34,46,55,56,19,39,35,48,49,50,36,51,40,52,41,42,43,53,54,37,44,34,46,55,56,19,34,39,34,35,41,42,43,37,44,19,35,41,42,43,37,44,19,34,46,34,34,46,19,34,39,35,48,49,50,36,51,40,52,41,42,43,53,54,37,44,34,46,55,56,19,19,39,35,48,49,50,36,51,40,52,41,42,43,53,54,37,44,34,46,55,55,55,56,19,19,46,39,40,34,34,34,39,35,48,49,50,36,51,40,52,41,42,43,53,54,37,44,34,46,55,56,19,42,34,34,34,41,56,53,37,44,48,34,46,56,34,40,53,19,34,40,34,34,34,35,41,42,43,37,44,19,19,39,35,48,49,50,36,51,40,52,41,42,43,53,54,37,44,34,46,55,56,19,39,35,48,49,50,36,51,40,52,41,42,43,53,54,37,44,34,46,55,56,19,39,35,48,49,50,36,51,40,52,41,42,43,53,54,37,44,34,46,55,56,19,42,37,43,46,48,72,73,74,75,76,77,78,79,79,79,79,79,79,63,63,63,0,63,63,63,63,63,63,64,63,63,18,63,63,63,0,18,63,63,18,63,64,0,63,63,63,63,63,64,63,18,63,63,0,0,18,18,63,67,62,63,64,18,67,62,63,64,18,62,63,64,18,62,63,64,18,62,63,64,18,62,62,63,63,64,18,18,67,62,63,64,18,18,18,67,62,63,64,18,67,62,18,67,67,0,18,62,62,63,64,18,62,63,18,67,62,63,64,18,67,62,63,64,18,67,62,63,64,18,80,81,82,83,84,85,84,85,84,86,87,88,89,90,91,92,93,94],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[],3],[[3,4],[[6,[5]]]],[[3,7,8]],[3],[9],[3],[9],[[],3],[[[1,[10,10]],1],11],[[[9,[10]],9],11],[[2,2],11],[[3,12],[[14,[13,[1,[13]]]]]],[1,1],[[1,15],16],[[[1,[17,17]],15],16],[[[9,[17]],15],16],[[2,15],16],[[2,15],16],[[]],[18,1],[19,1],[20,1],[[]],[[[21,[9]]],1],[[[22,[9]]],1],[23,1],[[]],[[]],[12,[[14,[2]]]],[[]],[[]],[[]],[[]],[[9,24],[[14,[25,23]]]],[1,[[6,[[26,[5]]]]]],[3],[[[27,[9]]],3],[[],9],0,[28],[[3,7],[[6,[5]]]],[[3,12],[[14,[13,[1,[13]]]]]],[[],29],[9,29],[[]],[[]],[[],30],[[],30],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],31],[[],31],[[],31],[[],31],0,[[3,[4,[2]]],3],[[3,[32,[7]],33],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[34,35,35],35],[[34,36,35,35],35],0,[[34,11],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,37],35],[38,39],[[34,40],35],[35,35],[41,41],[42,42],[43,43],[37,37],[44,44],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,45,35,35],35],[46,[[14,[[47,[2]],19]]]],[[34,44],35],[[],34],[[],46],[[19,19],11],[[34,35],39],[[39,15],16],[[35,15],16],[[48,15],16],[[49,15],16],[[50,15],16],[[36,15],16],[[51,15],16],[[40,15],16],[[52,15],16],[[41,15],16],[[42,15],16],[[43,15],16],[[53,15],16],[[54,15],16],[[37,15],16],[[44,15],16],[[34,15],16],[[46,15],16],[[55,15],16],[[56,15],16],[[19,15],16],[[19,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,55],[56,55],[[]],[[]],[20,19],[[[57,[35]],34],46],[[39,58],[[14,[19]]]],[[[32,[7]],59],40],[[34,[32,[7]]],35],[[34,48],35],[[34,60],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[34,[57,[35]]],35],[[34,53],35],[[34,[57,[42]]],35],0,[56,7],0,0,0,[[35,35],48],[[],34],[38,46],[[[32,[7]],[57,[7]],39],56],[[34,35,11],35],[[35,[32,[7]],59],40],0,[28],[[34,61],35],[59,40],[[34,35],35],[[34,59],35],[[34,30],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,0,0,[[46,[32,[7]],[32,[55]]],46],[[48,35],48],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,62],[63,63],[64,64],[18,18],[[]],[[]],[[]],[[]],[[62,62],11],[[63,63],11],[[64,64],11],[[18,18],11],[[62,15],16],[[62,15],16],[[63,15],16],[[63,15],16],[[64,15],16],[[18,15],16],[[18,15],16],[[]],[[]],[[]],[[]],[65,18],[66,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[18,[[6,[[26,[5]]]]]],[12,67],[67,6],[12,[[14,[46,18]]]],[28],0,[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],31],[[],31],[[],31],[[],31],[[],31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[4,"Error"],[4,"Intrinsic"],[3,"Bud"],[3,"Function"],[15,"usize"],[4,"Option"],[3,"Symbol"],[3,"Variable"],[3,"BudEnvironment"],[8,"PartialEq"],[15,"bool"],[15,"str"],[8,"FromStack"],[4,"Result"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"ParseError"],[4,"CompilationError"],[4,"LinkError"],[4,"Error"],[3,"Fault"],[4,"FaultKind"],[3,"PoppedValues"],[4,"Value"],[3,"Range"],[3,"VirtualMachine"],[3,"Demand"],[4,"ExecutionBehavior"],[3,"String"],[3,"TypeId"],[8,"Into"],[8,"NativeFunction"],[3,"SyntaxTreeBuilder"],[3,"NodeId"],[4,"BinOpKind"],[3,"Break"],[8,"FnOnce"],[3,"ExpressionTree"],[3,"Call"],[3,"Map"],[3,"Mapping"],[3,"List"],[3,"Continue"],[4,"Comparison"],[3,"CodeUnit"],[3,"Module"],[3,"If"],[3,"Block"],[3,"BinOp"],[3,"Not"],[3,"Assign"],[3,"Loop"],[4,"LoopParameters"],[4,"Declaration"],[3,"Function"],[3,"Vec"],[3,"CodeBlockBuilder"],[8,"IntoIterator"],[15,"i64"],[15,"f64"],[3,"Token"],[4,"TokenKind"],[4,"BracketType"],[4,"DecodeNumericError"],[4,"DecodeStringError"],[3,"Lexer"],[8,"Environment"],[13,"Parse"],[13,"Compilation"],[13,"Vm"],[13,"Compare"],[13,"UndefinedFunction"],[13,"UndefinedIdentifier"],[13,"Function"],[13,"Module"],[13,"Until"],[13,"While"],[13,"For"],[13,"Unexpected"],[13,"UnexpectedEof"],[13,"String"],[13,"Numeric"],[13,"MissingEnd"],[13,"ExpectedEndOfLine"],[13,"Identifier"],[13,"Integer"],[13,"Real"],[13,"String"],[13,"Comment"],[13,"Comparison"],[13,"Open"],[13,"Close"],[13,"Unknown"]]},\
"budvm":{"doc":"A safe, dynamically-typed virtual machine","t":[13,13,13,13,13,13,13,13,13,13,3,13,13,13,3,3,13,4,4,13,4,13,3,13,13,13,3,8,8,13,4,4,3,13,13,4,4,3,8,3,13,13,3,13,4,13,13,16,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,8,3,13,13,13,3,3,13,13,13,13,13,13,13,3,13,13,13,13,16,3,13,3,13,13,13,4,13,13,4,4,13,4,13,13,13,3,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,0,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,12,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,4,3,13,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,3,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,4,4,13,16,3,13,13,13,4,13,13,13,13,13,3,13,4,4,13,4,13,13,13,13,13,3,3,3,13,13,13,13,13,8,4,4,13,13,13,13,13,13,13,13,4,3,13,13,13,13,13,13,11,12,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,12,12,12,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,3,13,13,13,13,3,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,4,3,13,13,13,13,13,13,13,4,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["Add","Argument","Argument","ArgumentMissing","BitwiseAnd","BitwiseNot","BitwiseOr","BitwiseXor","Boolean","Boolean","Budgeted","Call","CallInstance","CallIntrinsic","CodeBlock","CodeBlockDisplay","Compare","CompareAction","Comparison","Continue","Destination","Divide","Dynamic","Dynamic","Dynamic","Dynamic","DynamicFault","DynamicValue","Environment","Equal","Error","ExecutionBehavior","Fault","Fault","Fault","FaultKind","FaultOrPause","FaultStackFrame","FromStack","Function","GreaterThan","GreaterThanOrEqual","HashMap","If","Instruction","Integer","Integer","Intrinsic","InvalidArgumentIndex","InvalidType","InvalidVariableIndex","InvalidVtableIndex","JumpIfFalse","JumpTo","LessThan","LessThanOrEqual","Link","List","Load","LogicalAnd","LogicalNot","LogicalOr","LogicalXor","Multiply","NativeFunction","Noop","NotEqual","Pause","Pause","PausedExecution","PoppedValues","Push","Real","Real","Return","Return","ShiftLeft","ShiftRight","Stack","Stack","StackOverflow","StackUnderflow","Store","String","StringLiteralDisplay","Sub","Symbol","TooManyArguments","TypeMismatch","UnknownFunction","Value","Value","ValueCannotBeHashed","ValueKind","ValueOrSource","ValueOutOfRange","ValueSource","Variable","Variable","Variable","VirtualMachine","Void","Void","add_budget","arg_count","as_dynamic","as_f64","as_i64","as_i64","as_i64","as_i64","as_str","as_str","balance","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","budmap","call","call","call","call","call","call","charge","checked_add","checked_add","checked_add","checked_div","checked_div","checked_div","checked_mul","checked_mul","checked_mul","checked_sub","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","default","default","default","default","default","default_for","define_function","define_native_function","define_persistent_variable","deref","display_indented","downcast_ref","drop","dynamic","dynamic","empty","empty","env","environment","environment","environment_mut","environment_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expect_no_pause","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_str","from_value","from_value","from_value","from_value","get","get","grow_by","hash","hash","hash","hash","hash","hash","implements_hash","index","index_mut","inner","insert","instruction_index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_dynamic","into_inner","into_inner","into_inner","into_iter","intrinsic","intrinsic","invalid_type","invoke","ir","is_empty","is_empty","is_empty","is_falsey","is_falsey","is_truthy","is_truthy","is_truthy","is_truthy","is_truthy","kind","kind","kind","kind","kind","kind","len","len","len","lexer_util","map_each_symbol","name","new","new","new","new","new","new","new","new","next","next_argument","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_eq","partial_eq","partial_eq","partial_eq","partial_eq","persistent_variables","pop","pop_back","pop_front","pop_n","provide","provide","provide","push","push_back","push_front","remaining_capacity","remove","remove","resolve_function_vtable_index","resume","run","run_interactive","size_hint","stack","stack","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_source","to_source","to_source","to_source","to_source","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","top","top_mut","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_hash","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_dynamic","try_into_inner","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_mismatch","variable_count","variables","verify_empty","vtable_index","with_function","with_native_function","0","0","0","0","0","0","0","0","0","0","expected","kind","message","message","name","received","received","0","0","0","0","0","action","arg_count","arg_count","arg_count","comparison","condition","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","false_jump_to","intrinsic","left","left","left","left","left","left","left","left","left","left","left","left","left","name","right","right","right","right","right","right","right","right","right","right","right","right","right","target","value","value","value","variable_index","vtable_index","0","0","0","0","0","0","0","0","0","0","BudMap","Entry","Iter","Occupied","OccupiedEntry","Vacant","VacantEntry","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","entry","fmt","from","from","from","from","from","get","get_by_index","insert","insert","into","into","into","into","into","into_iter","is_empty","iter","key","len","next","remove","remove","replace","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","with_capacity","with_capacity_and_hasher","with_hasher","0","0","Add","Argument","Argument","Argument","Argument","Argument","BitwiseAnd","BitwiseNot","BitwiseOr","BitwiseXor","Boolean","Call","CallInstance","CallIntrinsic","CodeBlock","CodeBlockBuilder","Compare","CompareAction","Destination","Divide","Environment","Function","Function","Function","If","Instruction","Integer","InvalidLabel","InvalidScopeOperation","JumpIfFalse","JumpTo","Label","Label","LinkError","Literal","Literal","LiteralOrSource","Load","LogicalAnd","LogicalNot","LogicalOr","LogicalXor","LoopInfo","LoopScope","Module","Multiply","Push","Real","Return","Return","Scope","ScopeSymbol","ScopeSymbolKind","ShiftLeft","ShiftRight","Stack","Store","String","Sub","UndefinedFunction","UndefinedIdentifier","ValueSource","Variable","Variable","Variable","Variable","Variable","Variable","Void","argument","arguments","asm","begin_loop","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_label","break_label","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","continue_label","continue_label","default","default","define_function","define_persistent_variable","deref","deref_mut","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_asm","index","index","init","instantiate","instantiate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","label","label_break","label_continue","link","link","link","link_into","load_from_symbol","load_into","lookup","loop_info","loop_result","map_each_symbol","modules","name","name","named_label","new","new","new_argument","new_label","new_temporary_variable","push","resolve_function_vtable_index","store_into_destination","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variable_index_from_name","variables","variables","vtable","0","0","0","0","0","0","0","action","arg_count","arg_count","arg_count","comparison","condition","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","destination","false_jump_to","function","intrinsic","left","left","left","left","left","left","left","left","left","left","left","left","left","name","right","right","right","right","right","right","right","right","right","right","right","right","right","target","value","value","value","variable","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AsmError","Comment","EndOfLine","Identifier","Integer","InvalidArgumentCount","LabelAlreadyUsed","Lexer","Numeric","Real","String","String","Token","TokenKind","Unexpected","UnexpectedChar","UnexpectedEof","UnknownArgument","UnknownInstruction","UnknownIntrinsic","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into_iter","kind","new","next","range","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","character","label","offset","range","0","0","0","0","DecodeNumericError","DecodeStringError","DoublePeekable","EndQuoteNotFound","Float","Integer","Integer","InvalidHexadecimalCharacter","InvalidUnicodeCodepoint","InvalidUnicodeEscape","Numeric","NumericLiteral","Real","StringLiteral","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contents","contents","decode_numeric_literal","decode_string_literal_contents","end_quote_offset","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","last_offset","location","location","new","next","peek","peek_second","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","codepoint","range","0","0"],"q":["budvmbudvm::CompareAction","","budvm::Destination","budvm::Error","","budvm::FaultKind","","","","","","","","","","","","budvm::FaultOrPause","","budvm::Instruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","budvm::Value","","","","budvm::ValueKind","budvm::ValueOrSource","","","budvm::ValueSource","","budvm::budmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","budvm::budmap::Entry","","budvm::irbudvm::ir::CompareAction","","budvm::ir::Destination","budvm::ir::Instruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","budvm::ir::LinkError","","","budvm::ir::Literal","","","","budvm::ir::LiteralOrSource","","","budvm::ir::ScopeSymbol","","","budvm::ir::ValueSource","","budvm::ir::asm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","budvm::ir::asm::AsmError","","","","","","","","","","","","budvm::ir::asm::TokenKind","","","","budvm::lexer_util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","budvm::lexer_util::DecodeNumericError","","budvm::lexer_util::DecodeStringError","","","","budvm::lexer_util::Numeric",""],"d":["Adds <code>left</code> and <code>right</code> and places the result in <code>destination</code>.","The value is in an argument at the provided 0-based index.","The value is in an argument at the provided 0-based index.","An argument that was expected to a function was not passed.","Performs a bitwise and of <code>left</code> and <code>right</code> and places the â€¦","Performs a bitwise not operation for <code>value</code>, storing the â€¦","Performs a bitwise or of <code>left</code> and <code>right</code> and places the â€¦","Performs a bitwise exclusive-or of <code>left</code> and <code>right</code> and â€¦","A boolean representing true or false.","A boolean representing true or false.","An <code>Environment</code> that allows executing an amount of â€¦","Calls a function.","Calls a function by name on a value.","Calls an intrinsic runtime function.","A block of code that can be executed on the virtual â€¦","Displays a <code>CodeBlock</code> with optional indentation.","Compares <code>left</code> and <code>right</code> using <code>comparison</code> to evaluate a â€¦","An action to take during an <code>Instruction::Compare</code>.","A method for comparing <code>Value</code>s.","The virtual machine should continue executing.","A destination for a value.","Divides <code>left</code> by <code>right</code> and places the result in <code>destination</code>.","A Rust value that has been wrapped for use in the virtual â€¦","A type exposed from Rust.","A dynamically exposed Rust type.","An error arose from dynamic types.","A <code>Fault</code> that arose from a <code>Dynamic</code> value.","A type that can be used in the virtual machine using â€¦","Customizes the behavior of a virtual machine instance.","Pushes true if left and right are equal. Otherwise, pushes â€¦","All errors that can be encountered executing Bud code.","The virtual machine behavior returned from â€¦","An unexpected event occurred while executing the virtual â€¦","A fault occurred while processing instructions.","A fault occurred while running the virtual machine.","An unexpected event within the virtual machine.","A reason for a virtual machine <code>Fault</code>.","A stack frame entry of a <code>Fault</code>.","A type that can be constructed from popping from the â€¦","A virtual machine function.","Pushes true if left is greater than right. Otherwise, â€¦","Pushes true if left is greater than or equal to right. â€¦","A wrapper for <code>std::collections::HashMap&lt;Value,Value&gt;</code> that â€¦","Checks <code>condition.is_truthy()</code>, jumping to the target â€¦","A virtual machine instruction.","A signed 64-bit integer value.","A signed 64-bit integer value.","The intrinsics offered by this environment.","An invalid argument index was used.","An invalid value type was encountered.","An invalid variable index was used.","An invalid vtable index was used.","If the comparison is false, jump to the 0-based â€¦","Jumps to the instruction number within the current â€¦","Pushes true if left is less than right. Otherwise, pushes â€¦","Pushes true if left is less than or equal to right. â€¦","An error occurred while linking an <code>Module</code>.","A List type for Bud, which wraps a <code>VecDeque&lt;Value&gt;</code>.","Loads a <code>value</code> into a variable.","Performs a logical and of <code>left</code> and <code>right</code> and places the â€¦","Performs a logical <code>not</code> operation for <code>value</code>, storing the â€¦","Performs a logical or of <code>left</code> and <code>right</code> and places the â€¦","Performs a logical exclusive-or of <code>left</code> and <code>right</code> and â€¦","Multiply <code>left</code> by <code>right</code> and places the result in <code>destination</code>â€¦","A native function for Bud.","An intrinsic that does nothing.","Pushes true if left and right are not equal. Otherwise, â€¦","The virtual machine should pause before the next â€¦","Execution was paused by the <code>Environment</code> as a result of â€¦","A paused code execution.","An iterator over a sequence of values being removed from â€¦","Pushes a value to the stack.","A real number value (64-bit floating point).","A real number value (64-bit floating point).","Returns from the current stack frame.","Store the value in the return register.","Performs a bitwise shift left of <code>left</code> by <code>right</code> bits, â€¦","Performs a bitwise shift right of <code>left</code> by <code>right</code> bits, â€¦","A stack of <code>Value</code>s.","Push the value to the stack.","An attempt to push a value to the stack was made after the â€¦","An attempt to pop a value off of the stack was made when â€¦","Store the boolean result in the destination indicated.","The string type for this environment.","A <code>Display</code> implementor that converts a string value to its â€¦","Subtracts <code>right</code> from <code>left</code> and places the result in â€¦","A String-like type that ensures only one instance of each â€¦","Too many arguments were passed to a function.","A value type was unexpected in the given context.","A call was made to a function that does not exist.","A virtual machine value.","A value.","A value that does not support hashing was used as a key in â€¦","All primitive <code>Value</code> kinds.","A value or a location of a value","A value was encountered that was out of range of valid â€¦","The source of a value.","Store the value in the 0-based variable index provided.","The value is in a variable at the provided 0-based index.","The value is in a variable at the provided 0-based index.","A Bud virtual machine instance.","A value representing the lack of a value.","A value representing the lack of a value.","Adds an additional budget. This value will saturate <code>usize</code> â€¦","The number of arguments this function expects.","Returns a reference to the contained value, if it was one â€¦","If this value is a <code>Value::Real</code>, this function returns the â€¦","Returns this value as an <code>i64</code>, if possible.","Returns this value as an <code>i64</code>, if possible.","Returns the result of <code>DynamicValue::as_i64()</code> for the â€¦","If this value is a <code>Value::Integer</code>, this function returns â€¦","Returns this symbolâ€™s underlying representation.","Returns this kind as a string.","Returns the current balance of the budget.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>HashMap</code> implementation that provides a defined iteration â€¦","Calls a function by <code>name</code> with <code>args</code>.","Calls a function by <code>name</code> with <code>args</code>.","","Invokes <code>DynamicValue::call</code> with the given parameters.","","Runs a set of instructions.","Returns the current balance of the budget.","Attempts to compute the result adding self and other.","Attempts to compute the result adding self and other.","Returns the result of <code>DynamicValue::checked_add()</code> for the â€¦","Attempts to compute the result dividing self and other.","Attempts to compute the result dividing self and other.","Returns the result of <code>DynamicValue::checked_div()</code> for the â€¦","Attempts to compute the result multiplying self and other.","Attempts to compute the result multiplying self and other.","Returns the result of <code>DynamicValue::checked_mul()</code> for the â€¦","Attempts to compute the result subtracting self and other.","Attempts to compute the result subtracting self and other.","Returns the result of <code>DynamicValue::checked_sub()</code> for the â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The instructions that make up the function body.","The virtual machine instructions.","","","","","","Returns a new instance with the provided environment.","","Defines a native function with the provided name.","","","Returns a <code>Display</code> implementor that indents each printed â€¦","Returns a reference to the original error, if <code>T</code> is the â€¦","","Returns a new value containing the Rust value provided.","Returns a <code>FaultKind::Dynamic</code>.","Returns a default instance of Bud with no custom â€¦","Returns a budgeted default environment.","The wrapped environment.","Returns a reference to the environment for this instance.","Returns a reference to the <code>Environment</code> from the virtual â€¦","Returns a mutable refernce to the environment for this â€¦","Returns a mutable reference to the <code>Environment</code> from the â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","Asserts that this error does not contain a paused â€¦","Pushes multiple arguments to the stack.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns an instance constructing from the stack.","","","","Returns the value associated with <code>key</code>, if present.","Returns the value contained at <code>index</code>, or <code>None</code> if <code>index</code> is â€¦","Grows the stack by <code>additional_voids</code>, inserting <code>Value::Void</code> â€¦","Hashes the contents of this value. Returns true if this â€¦","Hashes the contents of this value. Returns true if this â€¦","Returns the result of <code>DynamicValue::hash()</code> for the wrapped â€¦","","","","Returns true if value contained supports hashing.","","","Returns a reference to the contained value, if the â€¦","Inserts a key-value pair into the map.","The index of the instruction that was executing when this â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the contained value, if it was one originally â€¦","Extracts the contained collection type.","Returns the contained value if <code>T</code> is the contained type. If â€¦","Extracts the contained collection type.","","Evalutes the <code>intrinsic</code> operation with the provided â€¦","","An invalid type was encountered.","Invoke this function with <code>args</code>.","An intermediate representation of virtual machine â€¦","Returns true if this map contains no items.","Returns true if this list contains no values.","Returns true if this stack has no values.","Returns the inverse of <code>DynamicValue::is_truthy()</code> for the â€¦","Returns the inverse of <code>is_truthy()</code>","Returns true if the value contained is truthy. See â€¦","","Returns the result of <code>DynamicValue::is_truthy()</code> for the â€¦","","Returns true if the value is considered truthy.","Returns a unique string identifying this type. This â€¦","","Returns the result of <code>DynamicValue::kind()</code> for the wrapped â€¦","","Returns the kind of the contained value.","The kind of fault this is.","Returns the number of items contained.","Returns the number of values contained in the list.","Returns the number of <code>Value</code>s contained in this stack.","Utilities shared between Bud Assembly and Bud.","","The name of the function.","Returns a new, empty hash map.","Returns a new instance for the provided string.","Returns a new instance, wrapping <code>value</code>.","Returns a new function for a given code block.","Returns a new instance with the provided environment.","Returns a new instance with the provided initial budget.","Returns a new stack with enough reserved space to store â€¦","Returns a new instance containing the provided error.","","Returns the next value or returns a â€¦","Returns the relative ordering of <code>self</code> and <code>other</code>, if a â€¦","Returns the relative ordering of <code>self</code> and <code>other</code>, if a â€¦","Returns the result of <code>DynamicValue::partial_cmp()</code> for the â€¦","","","Returns true if self and other are considered equal. â€¦","Returns true if self and other are considered equal. â€¦","","Returns the result of <code>DynamicValue::partial_eq()</code> for the â€¦","","Returns a list of persistent variables defined with â€¦","Pops a <code>Value</code> from the stack.","Removes the last value in the list.","Removes the first value in the list.","Pops <code>count</code> elements from the top of the stack.","","","","Pushes <code>value</code> to the stack.","Pushes <code>value</code> to the back of the list.","Pushes <code>value</code> to the front of the list.","Returns the number of <code>Value</code>s that can be pushed to this â€¦","Removes the value associated with <code>key</code>, if present.","Removes the value contained at <code>index</code>, or <code>None</code> if <code>index</code> is â€¦","","Resumes executing the virtual machine.","Runs a set of instructions.","Runs a set of instructions without modifying the stack â€¦","","The stack for this virtual machine. Take care when â€¦","The stack trace of the virtual machine when the fault was â€¦","Called once before each instruction is executed.","","","","","","","","","","","","","","","","","","","","","","","","Returns this value as represented in source, if possible.","Returns this value as represented in source, if possible.","","Returns the result of <code>DynamicValue::to_source()</code> for the â€¦","","","","","","","","","","","","","","","","","","","Returns a reference to the top <code>Value</code> on the stack, or â€¦","Returns a reference to the top <code>Value</code> on the stack, or â€¦","Truncates the stack to <code>new_length</code>. If the <code>new_length</code> is â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to compute a hash over this value. Returns true â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the contained value if <code>T</code> matches the contained â€¦","Attempts to unwrap the value. If there is more than one â€¦","Returns the original error if <code>T</code> is the same type that was â€¦","","","","","","Returns the <code>TypeId</code> of the wrapped type.","","","","","","","","","","","","","","","","","","","","","","","","","An type mismatch occurred.","The number of variables this function requests space for.","The number of variables this code block requires.","Checks if all values have been iterated. If not, â€¦","The vtable index of the function being executed. If None, â€¦","Registers a function with the provided name and returns â€¦","Registers a function with the provided name and returns â€¦","","","","","","","","","","","The kind expected in this context.","The kind of the value the function was called on.","The error message explaining the type mismatch.","The error message explaining the type mismatch.","The name of the function being called.","The value that caused an error.","The value that caused an error.","","","","","","The action to take with the result of the comparison.","The number of arguments on the stack that should be used as","The number of arguments on the stack that should be used as","The number of arguments on the stack that should be used as","The comparison to perform.","The source of the condition.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result of the call.","The destination for the result of the call.","The destination for the result of the call.","The 0-based index of the instruction to jump to. This â€¦","The runtime intrinsic to call.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The value to shift","The value to shift","The left hand side of the operation.","The name of the function to call.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The number of bits to shift by","The number of bits to shift by","The right hand side of the operation.","The target of the function call. If None, the value on the â€¦","The left hand side of the operation.","The left hand side of the operation.","The value or source of the value to store.","The index of the variable to store the value in.","The vtable index within the current module of the function â€¦","","","","","","","","","","","A <code>std::collections::HashMap</code> alternative that provides some â€¦","A possible entry for a key in a <code>BudMap</code>.","A <code>BudMap</code> iterator that produces borrowed key-value pairs.","There is an entry for this key that contains a value.","An occupied entry for a key in a <code>BudMap</code>.","There is not currently an entry for this key.","An entry for a key that is is not currently part of a â€¦","","","","","","","","","","","","","","Looks up an entry for <code>key</code>. If one is found, <code>Entry::Occupied</code>â€¦","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a value for a given key.","Returns a value for a given 0-based index.","Inserts <code>value</code> into the map for this entryâ€™s key.","Inserts the key-value pair into the map. If an existing â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if no entries are contained in this map.","Returns an interator for this map.","Returns the key of this entry.","Returns the number of entries contained in this map.","","Removes the entry from the containing map, returning the â€¦","Removes a key from the map. If the key was found, the â€¦","Replaces the contained value, returning the existing value.","","","","","","","","","","","","","","","","","Returns the value of this entry.","Returns an empty map with enough room for <code>minimum_capacity</code> â€¦","Returns an empty map with enough room for <code>minimum_capacity</code> â€¦","Returns an empty map whose keys are hashed using â€¦","","","Adds <code>left</code> and <code>right</code> and places the result in <code>destination</code>.","A reference to an argument passed to a function.","The value is in an argument at the provided 0-based index.","The value is in an argument at the provided 0-based index.","The symbol is an argument passed into the executing â€¦","An argument passed into the executing function.","Performs a bitwise and of <code>left</code> and <code>right</code> and places the â€¦","Performs a bitwise not operation for <code>value</code>, storing the â€¦","Performs a bitwise or of <code>left</code> and <code>right</code> and places the â€¦","Performs a bitwise exclusive-or of <code>left</code> and <code>right</code> and â€¦","A boolean literal.","Calls a function.","Calls a function by name on a value.","Calls an intrinsic runtime function.","A block of intermediate instructions.","A type that helps build <code>CodeBlock</code>s.","Compares <code>left</code> and <code>right</code> using <code>comparison</code> to evaluate a â€¦","An action to take during an <code>Instruction::Compare</code>.","A destination for a value.","Divides <code>left</code> by <code>right</code> and places the result in <code>destination</code>.","The environment for this scope.","A function, in its intermediate form.","The symbol is a function.","A function name.","Checks <code>condition.is_truthy()</code>, jumping to the target label â€¦","An intermediate representation of an <code>crate::Instruction</code>.","A signed 64-bit integer literal value.","An invalid label was used.","An invalid operation for the provided <code>Scope</code> was attempted.","If the comparison is false, jump to the 0-based â€¦","Jump execution to the address of the given label.","A label that can be jumped to.","Labels the next instruction with the given <code>Label</code>.","An error occurred while linking code.","A literal value.","A literal.","A literal value or a location of a value","Loads a <code>value</code> into a variable.","Performs a logical and of <code>left</code> and <code>right</code> and places the â€¦","Performs a logical <code>not</code> operation for <code>value</code>, storing the â€¦","Performs a logical or of <code>left</code> and <code>right</code> and places the â€¦","Performs a logical exclusive-or of <code>left</code> and <code>right</code> and â€¦","Information about a loop.","A loop within a <code>CodeBlockBuilder</code>.","A collection of functions and modules.","Multiply <code>left</code> by <code>right</code> and places the result in <code>destination</code>â€¦","Pushes a value to the stack.","A real number literal value (64-bit floating point).","Returns from the current stack frame.","Store the value in the return register.","A scope for linking and compiling code.","A registered symbol.","The kind of a <code>ScopeSymbol</code>.","Performs a bitwise shift left of <code>left</code> by <code>right</code> bits, â€¦","Performs a bitwise shift right of <code>left</code> by <code>right</code> bits, â€¦","Push the value to the stack.","Store the boolean result in the destination indicated.","A string literal.","Subtracts <code>right</code> from <code>left</code> and places the result in â€¦","An undefined function was encountered.","An undefined identifier was encountered.","The source of a value.","A reference to a local variable.","The value is in a variable specified.","The value is in a variable specified.","Store the value in the 0-based variable index provided.","The symbol is a local variable.","A local variable.","A literal that represents <code>Value::Void</code>.","Finds an argument by a given name, or None if not found.","The number of arguments this code block expects to be on â€¦","Bud Assembly Language","Begins a loop with the given <code>name</code>. The result of the loop â€¦","The body of the function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The label for a <code>break</code> operation.","The label for the <code>break</code> operation of the loop.","","","","","","","","","","","","","","","","","","","","","The list of instructions.","The label for a <code>continue</code> operation.","The label for the <code>continue</code> operation of the loop.","","","Defines a function with the provided name.","Defines a persistent variable.","","","","","","","","","","","","","","","","Returns the completed code block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a module parsed from Bud Assembly (<code>budasm</code>).","Returns the index of this variable on the stack.","Returns the index of this variable on the stack.","The initialization function of this module, if any.","Create an instance of this literal in the given <code>Environment</code>â€¦","Instantiates this into a <code>ValueOrSource</code>, promoting <code>Literal</code>s â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Label the next instruction as <code>label</code>.","Marks the next instruction as where the <code>break</code> operation â€¦","Marks the next instruction as where the <code>continue</code> operation â€¦","Converts this intermediate representation of a compare â€¦","Links the code block against <code>scope</code>, resolving all labels â€¦","Links this function against <code>scope</code>, returning a function â€¦","Links this function against <code>scope</code>, and registers the â€¦","Adds the correct instruction to load a value from <code>symbol</code> â€¦","Runs all code in this unit in the passed context.","Looks up a symbol.","Returns the loop information for a given name, or the â€¦","The desination to store the loops result into.","Invokes <code>callback</code> for each symbol defined in this scope.","A list of submodules.","The name of the loop, if specified.","The name of the function, if provided.","Create a new label with a given name.","Returns a new function","Returns a new module.","Adds a new argument with the given name.","Create a new label.","Creates a new temporary variable.","Push an instruction.","Returns the vtable index of a function with the provided â€¦","Adds the appropriate instruction to store <code>value</code> into â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Looks up an existing location for a variable with the â€¦","Returns the collection of known variables.","The number of variables this code block uses.","A list of functions defined in the module.","","","","","","","","The action to take with the result of the comparison.","The number of arguments on the stack that should be used as","The number of arguments on the stack that should be used as","The number of arguments on the stack that should be used as","The comparison to perform.","The source of the condition.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result to be stored in.","The destination for the result of the call.","The destination for the result of the call.","The destination for the result of the call.","The label to jump to if the condition is falsey.","The name of the function to call. If None, the current â€¦","The runtime intrinsic to call.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The left hand side of the operation.","The value to shift","The value to shift","The left hand side of the operation.","The name of the function to call.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The right hand side of the operation.","The number of bits to shift by","The number of bits to shift by","The right hand side of the operation.","The target of the function call. If None, the value on the â€¦","The left hand side of the operation.","The left hand side of the operation.","The index of the variable to store the value in.","The value or source of the value to store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error while decoding a numeric literal.","An error while decoding the contents of a string literal.","An iterator adapter thatallows peeking up to two positions â€¦","The end double-quote character was not found.","An error from parsing a float value.","A signed integer value.","An error from parsing an integer value.","An invalid hexadecimal character was encountered at the â€¦","An invalid unicode codepoint was encountered.","An invalid character was encountered while parsing a â€¦","A numeric literal.","A parsed numeric literal.","A real number (floating point).","The result of decoding a string literalâ€™s contents.","","","","","","","","","","","","","","","","","The decoded contents of the literal.","The value that was parsed.","Decodes all valid numeric literal formats supported by Bud â€¦","Decodes a string literal with escape sequences used by Bud â€¦","The offset of the end quote in the original string.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The position of the last character that was part of this â€¦","Returns the location of the error within the original â€¦","Returns the location of the error within the original â€¦","Returns a new instance wrapping <code>iter</code>.","","Returns a reference to the next item the iterator will â€¦","Reterns a reference to the second item the iterator will â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","The decoded codepoint.","The range of the escape sequence.","",""],"i":[21,24,25,12,21,21,21,21,3,10,0,21,21,21,0,0,21,0,0,60,0,21,0,3,10,12,0,0,0,26,0,0,0,28,32,0,0,0,0,0,26,26,0,21,0,3,10,94,12,12,12,12,22,21,26,26,32,0,21,21,21,21,21,21,0,0,26,60,28,0,0,21,3,10,21,23,21,21,0,23,12,12,22,94,0,21,0,12,12,12,0,25,12,0,0,12,0,23,24,25,0,3,10,1,27,3,3,41,41,7,3,8,10,1,14,48,60,40,11,7,15,8,21,22,23,24,25,26,27,3,10,16,18,28,12,29,44,1,39,30,31,32,33,14,48,60,40,11,7,15,8,21,22,23,24,25,26,27,3,10,16,18,28,12,29,44,1,39,30,31,32,33,0,41,41,14,7,15,16,1,41,41,7,41,41,7,41,41,7,41,41,7,14,7,15,8,21,22,23,24,25,26,27,3,10,16,18,28,12,29,30,31,32,33,14,7,15,8,21,22,23,24,25,26,27,3,10,16,18,28,12,29,30,31,32,33,27,39,14,3,16,1,30,16,16,16,16,8,39,31,11,3,12,16,1,1,16,44,16,44,8,8,8,21,22,23,24,25,26,27,3,3,3,3,10,16,18,28,12,29,44,30,31,32,33,32,30,14,48,40,7,7,15,8,8,21,21,22,22,23,23,24,24,25,25,26,26,27,3,3,10,10,16,18,18,28,12,12,29,44,1,39,39,30,31,32,32,33,33,14,48,60,40,11,7,15,8,8,21,22,23,23,24,24,25,26,27,3,10,16,18,18,28,12,12,29,44,1,39,30,31,32,32,32,32,33,15,33,17,14,15,3,14,15,30,41,41,7,15,8,3,3,30,30,7,14,29,14,48,60,40,11,7,15,8,21,22,23,24,25,26,27,3,10,16,18,28,12,29,44,1,39,30,31,32,33,3,14,7,15,11,94,1,12,37,0,14,15,30,7,3,41,14,7,15,3,41,14,7,15,3,18,14,15,30,0,16,27,14,48,7,27,16,1,30,31,11,11,41,41,7,15,3,41,41,14,7,15,16,30,15,15,30,18,12,32,30,15,15,30,14,15,16,44,16,16,11,16,18,94,1,14,7,15,8,21,22,23,24,25,26,27,3,10,16,18,28,12,29,30,31,32,33,41,41,14,7,15,48,40,7,8,21,22,23,24,25,26,3,10,18,12,39,32,33,30,30,30,14,14,48,60,40,11,7,15,8,21,22,23,24,25,26,27,3,10,16,18,28,12,29,44,1,39,30,31,32,33,3,14,48,60,40,11,7,15,8,21,22,23,24,25,26,27,3,10,16,18,28,12,29,44,1,39,30,31,32,33,3,7,31,14,48,60,40,11,7,7,15,8,21,22,23,24,25,26,27,3,10,16,18,28,12,29,44,1,39,30,31,32,33,12,27,39,11,29,16,16,95,96,97,98,99,100,101,102,103,104,105,106,105,107,106,105,107,108,109,110,111,112,113,114,115,116,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,114,115,116,117,115,118,119,120,121,122,123,124,125,126,127,128,129,113,116,118,119,120,121,122,123,124,125,126,127,128,129,113,116,130,131,132,132,114,133,134,135,136,137,138,139,140,141,142,0,0,0,62,0,62,0,62,65,63,64,54,62,65,63,64,54,54,54,54,54,54,62,65,63,64,54,54,54,63,54,62,65,63,64,54,64,54,54,65,54,64,65,54,65,54,62,65,63,64,54,62,65,63,64,54,62,65,63,64,54,65,54,54,54,143,144,70,0,50,72,78,79,70,70,70,70,71,70,70,70,0,0,70,0,0,70,145,0,78,79,70,0,71,52,52,73,70,0,70,0,0,72,0,70,70,70,70,70,0,0,0,70,70,71,70,49,0,0,0,70,70,49,73,71,70,52,52,0,0,50,72,49,78,79,71,66,75,0,66,76,66,68,68,69,38,67,70,71,50,72,49,73,77,75,78,79,76,74,52,66,68,68,69,38,67,70,71,50,72,49,73,77,75,78,79,76,74,52,68,77,69,38,67,70,71,50,72,49,73,52,69,38,67,70,71,50,72,49,73,52,75,68,77,66,74,145,145,68,68,68,69,38,67,70,71,72,49,73,75,76,74,52,66,69,69,38,38,67,67,70,70,71,71,50,50,72,72,49,49,73,73,77,75,75,78,79,76,76,74,74,52,52,66,68,69,38,67,70,71,50,72,49,73,77,75,78,79,76,74,52,74,38,67,74,71,72,66,68,69,38,67,70,71,50,72,49,73,77,75,78,79,76,74,52,66,68,68,73,75,76,76,66,74,66,66,77,145,74,77,76,66,76,74,66,66,66,66,145,66,69,38,67,70,71,50,72,49,73,52,69,38,67,70,71,50,72,49,73,75,76,74,52,66,68,69,38,67,70,71,50,72,49,73,77,75,78,79,76,74,52,66,68,69,38,67,70,71,50,72,49,73,77,75,78,79,76,74,52,66,68,69,38,67,70,71,50,72,49,73,77,75,78,79,76,74,52,66,66,75,74,146,147,148,149,150,151,152,153,154,155,156,153,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,154,155,156,157,154,155,158,159,160,161,162,163,164,166,167,168,170,171,153,156,158,159,160,161,162,163,164,166,167,168,170,171,153,156,165,169,172,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0,84,84,84,84,80,80,0,80,84,84,80,0,0,80,80,80,80,80,80,87,83,84,80,87,83,84,80,83,84,80,83,84,80,87,83,84,80,80,80,87,83,84,80,87,83,87,87,83,87,83,84,80,87,83,84,80,87,83,84,80,188,189,190,191,192,193,194,195,196,197,196,197,198,199,200,201,0,0,0,86,85,202,85,86,86,86,0,0,202,0,88,90,89,202,86,85,88,90,89,202,86,85,86,85,86,85,90,89,0,0,90,86,85,86,86,85,85,88,90,89,202,86,85,85,85,88,90,89,202,86,85,88,89,86,85,88,88,88,88,86,85,86,85,88,90,89,202,86,85,88,90,89,202,86,85,88,90,89,202,86,85,203,204,205,206,207,207,208,209],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],0,[3,4],[3,[[4,[5]]]],[[],[[4,[6]]]],[[],[[4,[6]]]],[7,[[4,[6]]]],[3,[[4,[6]]]],[8,9],[10,9],[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[8,11],[[13,[3,12]]]],[[8,11],[[13,[3,12]]]],[[14,8,11],[[13,[3,12]]]],[[7,8,11],[[13,[3,12]]]],[[15,8,11],[[13,[3,12]]]],[[16,8],[[13,[17,[18,[17]]]]]],[1,19],[[3,19],[[13,[[4,[3]],12]]]],[[3,19],[[13,[[4,[3]],12]]]],[[7,3,19],[[13,[[4,[3]],12]]]],[[3,19],[[13,[[4,[3]],12]]]],[[3,19],[[13,[[4,[3]],12]]]],[[7,3,19],[[13,[[4,[3]],12]]]],[[3,19],[[13,[[4,[3]],12]]]],[[3,19],[[13,[[4,[3]],12]]]],[[7,3,19],[[13,[[4,[3]],12]]]],[[3,19],[[13,[[4,[3]],12]]]],[[3,19],[[13,[[4,[3]],12]]]],[[7,3,19],[[13,[[4,[3]],12]]]],[14,14],[7,7],[15,15],[8,8],[[[21,[20]]],[[21,[20]]]],[22,22],[23,23],[24,24],[25,25],[26,26],[[[27,[20]]],[[27,[20]]]],[3,3],[10,10],[[[16,[20]]],[[16,[20]]]],[18,18],[28,28],[12,12],[29,29],[30,30],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[14,[34]]]],[[],3],[[],[[16,[35]]]],[[],[[1,[35]]]],[[],30],[[],16],[[16,27],[[4,[2]]]],[[16,[36,[8]],37],2],[[16,8,38]],[8],[[39,9],40],[31,4],[11],[41,3],[[[0,[42,43]]],12],[[],16],[[],1],0,[16],[44],[16],[44],[[8,9],19],[[8,9],19],[[8,8],19],[[[21,[45]],21],19],[[22,22],19],[[23,23],19],[[24,24],19],[[25,25],19],[[26,26],19],[[[27,[45]],27],19],[[3,3],19],[[3,5],19],[[3,19],19],[[3,6],19],[[10,10],19],[[[16,[45]],16],19],[[[18,[45,45]],18],19],[[[28,[45,45]],28],19],[[12,12],19],[[29,29],19],[[[44,[45,45]],44],19],[[30,30],19],[[31,31],19],[[[32,[45,45]],32],19],[[33,33],19],[32,32],[30,[[13,[2,12]]]],[[14,46],47],[[48,46],47],[[40,46],47],[[7,46],47],[[7,46],47],[[15,46],47],[[8,46],47],[[8,46],47],[[[21,[42]],46],47],[[21,46],47],[[22,46],47],[[22,46],47],[[23,46],47],[[23,46],47],[[24,46],47],[[24,46],47],[[25,46],47],[[25,46],47],[[26,46],47],[[26,46],47],[[[27,[42]],46],47],[[3,46],47],[[3,46],47],[[10,46],47],[[10,46],47],[[[16,[42]],46],47],[[[18,[42,42]],46],47],[[18,46],47],[[[28,[42,42]],46],47],[[12,46],47],[[12,46],47],[[29,46],47],[[[44,[42,42]],46],47],[[[1,[42]],46],47],[[39,46],47],[[[39,[42]],46],47],[[30,46],47],[[31,46],47],[[32,46],47],[[[32,[42,42]],46],47],[[33,46],47],[[33,46],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,8],[[]],[[]],[[]],[[]],[49,23],[[]],[50,24],[[]],[[]],[[]],[[]],[[]],[[]],[12,18],[[]],[[]],[51,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,32],[[]],[18,32],[12,32],[[]],[53,15],[9,[[13,[33]]]],[3,[[13,[12]]]],[3,[[13,[12]]]],[3,[[13,[12]]]],[3,[[13,[3,12]]]],[[14,3],[[4,[3]]]],[[15,2],[[4,[3]]]],[[30,2],[[13,[12]]]],[[],19],[[],19],[7,19],[15,19],[8],[3],[3,19],[[30,2]],[[30,2]],[7,4],[[14,3,3],[[13,[[4,[3]],12]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[13,[[0,[41,20]],3]]]],[14,[[54,[3,3]]]],[7,[[13,[[0,[41,20]],7]]]],[15,[[55,[3]]]],[[]],[11,[[13,[3,12]]]],[[1,11],[[13,[3,12]]]],[[[36,[56]],3],12],[11,[[13,[3,12]]]],0,[14,19],[15,19],[30,19],[7,19],[3,19],[[],19],[14,19],[7,19],[15,19],[3,19],[[],9],[14,9],[7,9],[15,9],[3,10],0,[14,2],[15,2],[30,2],0,[16],0,[[],[[14,[34]]]],[9,48],[41,7],[[[36,[8]],2,39],27],[[2,2],16],[2,1],[[2,2],30],[[[0,[42,43]]],31],[11,4],[[11,9],[[13,[3,12]]]],[3,[[4,[57]]]],[3,[[4,[57]]]],[[7,3],[[4,[57]]]],[[15,3],[[4,[57]]]],[[3,3],[[4,[57]]]],[3,[[4,[19]]]],[3,[[4,[19]]]],[[14,3],[[4,[19]]]],[[7,3],[[4,[19]]]],[[15,3],[[4,[19]]]],[16],[30,[[13,[3,12]]]],[15,[[4,[3]]]],[15,[[4,[3]]]],[[30,2],11],[58],[58],[58],[[30,3],[[13,[12]]]],[[15,3]],[[15,3]],[30,2],[[14,3],[[4,[3]]]],[[15,2],[[4,[3]]]],[[16,8],[[4,[2]]]],[44,[[13,[18]]]],[[16,59,2],[[13,[17,[18,[17]]]]]],[[16,59,2,19],[[13,[17,[18,[17]]]]]],[11],0,0,[[],60],[1,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[56]]]],[[],[[4,[56]]]],[14,[[4,[56]]]],[7,[[4,[56]]]],[15,[[4,[56]]]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[30,[[13,[3,12]]]],[30,[[13,[3,12]]]],[[30,2]],[[],13],[11,[[13,[[14,[34]]]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[3,19],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[3,[[13,[41,3]]]],[7,[[13,[41,7]]]],[31,[[13,[[0,[42,43]],31]]]],[[],61],[[],61],[[],61],[[],61],[[],61],[7,61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[[36,[56]],10,3],12],0,0,[11,[[13,[12]]]],0,[[16,27],16],[[16,[36,[8]],37],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[20,20,20]]],[[54,[20,20,20]]]],[[]],[[],[[54,[34]]]],[54,62],[[[54,[42,42,42]],46],47],[[]],[[]],[[]],[[]],[[]],[54,4],[[54,2],4],[63],[54,4],[[]],[[]],[[]],[[]],[[]],[[]],[54,19],[54,64],[65],[54,2],[64,4],[65],[54,4],[65],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],61],[[],61],[[],61],[[],61],[[],61],[65],[2,[[54,[34]]]],[2,54],[[],54],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[66,8],[[4,[67]]]],0,0,[[66,[4,[8]],49],[[68,[66]]]],0,[[]],[[]],[68,66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[69,69],[38,38],[67,67],[[[70,[20]]],[[70,[20]]]],[71,71],[50,50],[72,72],[49,49],[73,73],[52,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],66],[[],74],[27,[[4,[2]]]],[[8,38]],[68],[68],[68],[[69,69],19],[[38,38],19],[[67,67],19],[[[70,[45]],70],19],[[71,71],19],[[72,72],19],[[49,49],19],[[73,73],19],[[[75,[45]],75],19],[[[76,[45]],76],19],[[[74,[45]],74],19],[[52,52],19],[66,75],[[69,46],47],[[69,46],47],[[38,46],47],[[38,46],47],[[67,46],47],[[67,46],47],[[70,46],47],[[[70,[42]],46],47],[[71,46],47],[[71,46],47],[[50,46],47],[[50,46],47],[[72,46],47],[[72,46],47],[[49,46],47],[[49,46],47],[[73,46],47],[[73,46],47],[[77,46],47],[[[75,[42]],46],47],[[75,46],47],[[78,46],47],[[79,46],47],[[76,46],47],[[[76,[42]],46],47],[[[74,[42]],46],47],[[74,46],47],[[52,46],47],[[52,46],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[13,[74,80]]]],[38,2],[67,2],0,[71,3],[72,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[66,69]],[68],[68],[73,[[13,[22,52]]]],[75,[[13,[39,52]]]],[76,[[13,[27,52]]]],[76,[[13,[2,52]]]],[[66,8,49],[[13,[52]]]],[[74,16],[[13,[17,[32,[17]]]]]],[[66,8],[[4,[79]]]],[[66,[4,[8]]],[[4,[77]]]],0,[[]],0,0,0,[[66,[36,[8]]],69],[[[36,[8]],75],76],[[[81,[76]],[81,[74]],[4,[76]]],74],[[66,[36,[8]]],67],[66,69],[66,38],[[66,70]],[8,[[4,[2]]]],[[66,72,49]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[66,8],38],[66,82],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[83,83],19],[[84,84],19],[[80,80],19],[[83,46],47],[[84,46],47],[[80,46],47],[[]],[[]],[[]],[[]],[85,80],[86,80],[[]],[[]],[[]],[[]],[[]],0,[9,87],[87,4],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],61],[[],61],[[],61],[[],61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,86],[85,85],[[]],[[]],0,0,[[88,9,2],[[13,[89,85]]]],[2,[[13,[90,86]]]],0,[[86,86],19],[[85,85],19],[[86,46],47],[[86,46],47],[[85,46],47],[[85,46],47],[[]],[[]],[[]],[[]],[[]],[91,85],[[]],[92,85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[86,[[4,[[93,[2]]]]]],[85,[[4,[[93,[2]]]]]],[[],88],[88,4],[88,4],[88,4],[[]],[[]],[[],56],[[],56],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],0,0,0,0,0,0,0,0],"p":[[3,"Budgeted"],[15,"usize"],[4,"Value"],[4,"Option"],[15,"f64"],[15,"i64"],[3,"Dynamic"],[3,"Symbol"],[15,"str"],[4,"ValueKind"],[3,"PoppedValues"],[4,"FaultKind"],[4,"Result"],[3,"HashMap"],[3,"List"],[3,"VirtualMachine"],[8,"FromStack"],[3,"Fault"],[15,"bool"],[8,"Clone"],[4,"Instruction"],[4,"CompareAction"],[4,"Destination"],[4,"ValueSource"],[4,"ValueOrSource"],[4,"Comparison"],[3,"Function"],[4,"FaultOrPause"],[3,"FaultStackFrame"],[3,"Stack"],[3,"DynamicFault"],[4,"Error"],[3,"Noop"],[3,"RandomState"],[8,"Default"],[8,"Into"],[8,"NativeFunction"],[3,"Variable"],[3,"CodeBlock"],[3,"CodeBlockDisplay"],[8,"DynamicValue"],[8,"Debug"],[8,"Display"],[3,"PausedExecution"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[3,"StringLiteralDisplay"],[4,"Destination"],[4,"ValueSource"],[3,"Error"],[4,"LinkError"],[8,"IntoIterator"],[3,"BudMap"],[3,"VecDeque"],[3,"String"],[4,"Ordering"],[3,"Demand"],[4,"Cow"],[4,"ExecutionBehavior"],[3,"TypeId"],[4,"Entry"],[3,"VacantEntry"],[3,"Iter"],[3,"OccupiedEntry"],[3,"CodeBlockBuilder"],[3,"Argument"],[3,"LoopScope"],[3,"Label"],[4,"Instruction"],[4,"Literal"],[4,"LiteralOrSource"],[4,"CompareAction"],[3,"Module"],[3,"CodeBlock"],[3,"Function"],[3,"LoopInfo"],[4,"ScopeSymbolKind"],[4,"ScopeSymbol"],[4,"AsmError"],[3,"Vec"],[3,"HashMap"],[3,"Token"],[4,"TokenKind"],[4,"DecodeNumericError"],[4,"DecodeStringError"],[3,"Lexer"],[3,"DoublePeekable"],[3,"NumericLiteral"],[3,"StringLiteral"],[3,"ParseFloatError"],[3,"ParseIntError"],[3,"Range"],[8,"Environment"],[13,"Store"],[13,"JumpIfFalse"],[13,"Variable"],[13,"Link"],[13,"Fault"],[13,"Dynamic"],[13,"ArgumentMissing"],[13,"TooManyArguments"],[13,"ValueCannotBeHashed"],[13,"ValueOutOfRange"],[13,"TypeMismatch"],[13,"UnknownFunction"],[13,"InvalidType"],[13,"Fault"],[13,"Pause"],[13,"JumpTo"],[13,"Push"],[13,"Return"],[13,"Compare"],[13,"Call"],[13,"CallIntrinsic"],[13,"CallInstance"],[13,"If"],[13,"Add"],[13,"Sub"],[13,"Multiply"],[13,"Divide"],[13,"LogicalAnd"],[13,"LogicalOr"],[13,"LogicalXor"],[13,"BitwiseAnd"],[13,"BitwiseOr"],[13,"BitwiseXor"],[13,"ShiftLeft"],[13,"ShiftRight"],[13,"LogicalNot"],[13,"BitwiseNot"],[13,"Load"],[13,"Integer"],[13,"Real"],[13,"Boolean"],[13,"Dynamic"],[13,"Dynamic"],[13,"Value"],[13,"Argument"],[13,"Variable"],[13,"Argument"],[13,"Variable"],[13,"Occupied"],[13,"Vacant"],[8,"Scope"],[13,"Store"],[13,"JumpIfFalse"],[13,"Variable"],[13,"JumpTo"],[13,"Label"],[13,"Push"],[13,"Return"],[13,"Compare"],[13,"Call"],[13,"CallIntrinsic"],[13,"CallInstance"],[13,"If"],[13,"Add"],[13,"Sub"],[13,"Multiply"],[13,"Divide"],[13,"LogicalAnd"],[13,"LogicalOr"],[13,"LogicalXor"],[13,"LogicalNot"],[13,"BitwiseAnd"],[13,"BitwiseOr"],[13,"BitwiseXor"],[13,"BitwiseNot"],[13,"ShiftLeft"],[13,"ShiftRight"],[13,"Load"],[13,"UndefinedFunction"],[13,"UndefinedIdentifier"],[13,"InvalidLabel"],[13,"Integer"],[13,"Real"],[13,"Boolean"],[13,"String"],[13,"Literal"],[13,"Argument"],[13,"Variable"],[13,"Argument"],[13,"Variable"],[13,"Function"],[13,"Argument"],[13,"Variable"],[13,"String"],[13,"Numeric"],[13,"Unexpected"],[13,"UnexpectedEof"],[13,"UnknownInstruction"],[13,"UnknownArgument"],[13,"InvalidArgumentCount"],[13,"UnknownIntrinsic"],[13,"UnexpectedChar"],[13,"LabelAlreadyUsed"],[13,"Identifier"],[13,"Integer"],[13,"Real"],[13,"String"],[4,"Numeric"],[13,"Float"],[13,"Integer"],[13,"InvalidHexadecimalCharacter"],[13,"InvalidUnicodeEscape"],[13,"InvalidUnicodeCodepoint"],[13,"Integer"],[13,"Real"]]},\
"xtask":{"doc":"","t":[4,11,11,11,11,5,11,11,11,11],"n":["Config","borrow","borrow_mut","from","into","main","paths","try_from","try_into","type_id"],"q":["xtask","","","","","","","","",""],"d":["","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,6,6,6,6,0,6,6,6,6],"f":[0,[[]],[[]],[[]],[[]],[[],1],[[],[[3,[2]]]],[[],4],[[],4],[[],5]],"p":[[6,"Result"],[3,"String"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[4,"Config"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
